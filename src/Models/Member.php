<?php
/*
 * ZeroTierCentralAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace ZeroTierCentralAPILib\Models;

use JsonSerializable;

/**
 * @todo Write general description for this model
 */
class Member implements JsonSerializable
{
    /**
     * Member record ID, which is formed from the network and node IDs [ro]
     * @var string|null $id public property
     */
    public $id;

    /**
     * Object type ("Member") [ro]
     * @var string|null $type public property
     */
    public $type;

    /**
     * System clock on server [ro]
     * @var double|null $clock public property
     */
    public $clock;

    /**
     * 16-digit ZeroTier network ID [ro]
     * @var string|null $networkId public property
     */
    public $networkId;

    /**
     * 10-digit ZeroTier node ID / device address [ro]
     * @var string|null $nodeId public property
     */
    public $nodeId;

    /**
     * 10-digit ZeroTier node ID of controller (same as first 10 digits of network ID) [ro]
     * @var string|null $controllerId public property
     */
    public $controllerId;

    /**
     * Hidden in UI? [rw]
     * @var bool|null $hidden public property
     */
    public $hidden;

    /**
     * Short name describing member [rw]
     * @var string|null $name public property
     */
    public $name;

    /**
     * Long form description [rw]
     * @var string|null $description public property
     */
    public $description;

    /**
     * Member is online? (has requested an update recently) [ro]
     * @var bool|null $online public property
     */
    public $online;

    /**
     * Time member was last determined to be online [ro]
     * @var double|null $lastOnline public property
     */
    public $lastOnline;

    /**
     * Time member was last determined to be offline [ro]
     * @var double|null $lastOffline public property
     */
    public $lastOffline;

    /**
     * Array of most recently known physical addresses of member [ro]
     * @var array|null $physicalAddresses public property
     */
    public $physicalAddresses;

    /**
     * Latest physical address of member [ro]
     * @var string|null $physicalAddress public property
     */
    public $physicalAddress;

    /**
     * Latitude and longitude of GeoIP-determined location of physicalAddress (if available) [ro]
     * @var object|null $physicalLocation public property
     */
    public $physicalLocation;

    /**
     * Most recent client software version [ro]
     * @var string|null $clientVersion public property
     */
    public $clientVersion;

    /**
     * Most recent client-reported ZeroTier protocol version [ro]
     * @var double|null $protocolVersion public property
     */
    public $protocolVersion;

    /**
     * True if member supports circuit testing [ro]
     * @var bool|null $supportsCircuitTesting public property
     */
    public $supportsCircuitTesting;

    /**
     * True if member supports the new (post-1.2) rules engine [ro]
     * @var bool|null $supportsRulesEngine public property
     */
    public $supportsRulesEngine;

    /**
     * Notify of offline after this many milliseconds [rw]
     * @var double|null $offlineNotifyDelay public property
     */
    public $offlineNotifyDelay;

    /**
     * @todo Write general description for this property
     * @var Config11|null $config public property
     */
    public $config;

    /**
     * Constructor to set initial or default values of member properties
     * @param string   $id                     Initialization value for $this->id
     * @param string   $type                   Initialization value for $this->type
     * @param double   $clock                  Initialization value for $this->clock
     * @param string   $networkId              Initialization value for $this->networkId
     * @param string   $nodeId                 Initialization value for $this->nodeId
     * @param string   $controllerId           Initialization value for $this->controllerId
     * @param bool     $hidden                 Initialization value for $this->hidden
     * @param string   $name                   Initialization value for $this->name
     * @param string   $description            Initialization value for $this->description
     * @param bool     $online                 Initialization value for $this->online
     * @param double   $lastOnline             Initialization value for $this->lastOnline
     * @param double   $lastOffline            Initialization value for $this->lastOffline
     * @param array    $physicalAddresses      Initialization value for $this->physicalAddresses
     * @param string   $physicalAddress        Initialization value for $this->physicalAddress
     * @param object   $physicalLocation       Initialization value for $this->physicalLocation
     * @param string   $clientVersion          Initialization value for $this->clientVersion
     * @param double   $protocolVersion        Initialization value for $this->protocolVersion
     * @param bool     $supportsCircuitTesting Initialization value for $this->supportsCircuitTesting
     * @param bool     $supportsRulesEngine    Initialization value for $this->supportsRulesEngine
     * @param double   $offlineNotifyDelay     Initialization value for $this->offlineNotifyDelay
     * @param Config11 $config                 Initialization value for $this->config
     */
    public function __construct()
    {
        if (21 == func_num_args()) {
            $this->id                     = func_get_arg(0);
            $this->type                   = func_get_arg(1);
            $this->clock                  = func_get_arg(2);
            $this->networkId              = func_get_arg(3);
            $this->nodeId                 = func_get_arg(4);
            $this->controllerId           = func_get_arg(5);
            $this->hidden                 = func_get_arg(6);
            $this->name                   = func_get_arg(7);
            $this->description            = func_get_arg(8);
            $this->online                 = func_get_arg(9);
            $this->lastOnline             = func_get_arg(10);
            $this->lastOffline            = func_get_arg(11);
            $this->physicalAddresses      = func_get_arg(12);
            $this->physicalAddress        = func_get_arg(13);
            $this->physicalLocation       = func_get_arg(14);
            $this->clientVersion          = func_get_arg(15);
            $this->protocolVersion        = func_get_arg(16);
            $this->supportsCircuitTesting = func_get_arg(17);
            $this->supportsRulesEngine    = func_get_arg(18);
            $this->offlineNotifyDelay     = func_get_arg(19);
            $this->config                 = func_get_arg(20);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['id']                     = $this->id;
        $json['type']                   = $this->type;
        $json['clock']                  = $this->clock;
        $json['networkId']              = $this->networkId;
        $json['nodeId']                 = $this->nodeId;
        $json['controllerId']           = $this->controllerId;
        $json['hidden']                 = $this->hidden;
        $json['name']                   = $this->name;
        $json['description']            = $this->description;
        $json['online']                 = $this->online;
        $json['lastOnline']             = $this->lastOnline;
        $json['lastOffline']            = $this->lastOffline;
        $json['physicalAddresses']      = $this->physicalAddresses;
        $json['physicalAddress']        = $this->physicalAddress;
        $json['physicalLocation']       = $this->physicalLocation;
        $json['clientVersion']          = $this->clientVersion;
        $json['protocolVersion']        = $this->protocolVersion;
        $json['supportsCircuitTesting'] = $this->supportsCircuitTesting;
        $json['supportsRulesEngine']    = $this->supportsRulesEngine;
        $json['offlineNotifyDelay']     = $this->offlineNotifyDelay;
        $json['config']                 = $this->config;

        return $json;
    }
}
